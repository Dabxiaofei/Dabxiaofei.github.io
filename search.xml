<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[聊天喽]]></title>
    <url>%2F2018%2F03%2F29%2F2901%2F</url>
    <content type="text"><![CDATA[摘要:聊天记录{\\__/}( • - •)/つ 寿司要不要? {\\__/}( • - •)/つ 草莓要不要? {\\__/}( • - •)/つ🍕 披萨要不要? {\\__/}( • - •)/つ🍑 桃子要不要? {\\__/}( • - •)/つ 我你要不要?]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>聊天</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java二叉树]]></title>
    <url>%2F2018%2F03%2F19%2F1901%2F</url>
    <content type="text"><![CDATA[摘要:数据结构今天练习用java实现二叉树的遍历算法，首先我先编写二叉树类BinaryTree，代码如下：package package2;public class BinaryTree { int data; //根节点数据 BinaryTree left; //左子树 BinaryTree right; //右子树 public BinaryTree(int data) //实例化二叉树类 { this.data = data; left = null; right = null; } public void insert(BinaryTree root,int data){ //向二叉树中插入子节点 if(data&gt;root.data) //二叉树的左节点都比根节点小 { if(root.right==null){ root.right = new BinaryTree(data); }else{ this.insert(root.right, data); } }else{ //二叉树的右节点都比根节点大 if(root.left==null){ root.left = new BinaryTree(data); }else{ this.insert(root.left, data); } } }}当建立好二叉树类后可以创建二叉树实例，并实现二叉树的先根遍历，中根遍历，后根遍历，代码如下：package package2;public class BinaryTreePreorder { public static void preOrder(BinaryTree root){ //先根遍历 if(root!=null){ System.out.print(root.data+”-“); preOrder(root.left); preOrder(root.right); } } public static void inOrder(BinaryTree root){ //中根遍历 if(root!=null){ inOrder(root.left); System.out.print(root.data+”–”); inOrder(root.right); } } public static void postOrder(BinaryTree root){ //后根遍历 if(root!=null){ postOrder(root.left); postOrder(root.right); System.out.print(root.data+”—“); } } public static void main(String[] str){ int[] array = {12,76,35,22,16,48,90,46,9,40}; BinaryTree root = new BinaryTree(array[0]); //创建二叉树 for(int i=1;i&lt;array.length;i++){ root.insert(root, array[i]); //向二叉树中插入数据 } System.out.println(“先根遍历：”); preOrder(root); System.out.println(); System.out.println(“中根遍历：”); inOrder(root); System.out.println(); System.out.println(“后根遍历：”); postOrder(root); 创建好的二叉树图形如下: 当运行上面的程序后结果如下：先根遍历：12-9-76-35-22-16-48-46-40-90-中根遍历：9–12–16–22–35–40–46–48–76–90–后根遍历：9—16—22—40—46—48—35—90—76—12—]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[接口]]></title>
    <url>%2F2018%2F03%2F16%2F1202%2F</url>
    <content type="text"><![CDATA[摘要:java编程思想 接口抽象类的方法默认为抽象接口可以继承接口接口中的域隐式地是static和final的接口可以嵌套在其他类和接口中当实现某个接口时，并不需要实现嵌套在其内部的任何接口使用接口的时候，要注重的是重构，而不是增加接口。]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实现点击出现桃心效果]]></title>
    <url>%2F2018%2F03%2F16%2F1130%2F</url>
    <content type="text"><![CDATA[摘要:优化博客之路 具体实现方法在网址输入如下http://7u2ss1.com1.z0.glb.clouddn.com/love.js然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码： &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一天建立写出博客]]></title>
    <url>%2F2018%2F03%2F15%2F1505%2F</url>
    <content type="text"><![CDATA[摘要:1天建立博客的路程 从开始想建立博客，以及过去好久了，这么长的时间中，一直在断断续续向前走开始的时候，想用ssm框架来写的，可惜，需要买一个服务器，就一直没动手后来，因为公司用的是jfinal，就想用jfinal写出来的，顺带也就当学习了，还是不了了之某天看到一群前端大神写的html，真的漂亮，就花了一天时间，把各种各种的好看页面都放上去了然后，就一直完成工作了，那就是去学习android知道昨天，我的工作完成之后，突然发现了一个博客，用的是hexo写出来的，好久之前的想法涌上心头。我就查了一下资料，发现都在说这个框架的简便。既然大家都说简单了，那就试试呗，哈哈，经过，12个小时的艰苦奋斗，终于完成了大部分的功能。还有几处有bug，今天还没解决1、搜索功能2、上传后两张图片显示不出来3、图标的问题，就是出不来4、宠物的显示，出不来5、网易云音乐没时间搞了6、文章评论功能大概就这些了，现在已经将近晚上9点了，还没吃晚饭，好饿，我要去吃饭了。]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何卖仓]]></title>
    <url>%2F2018%2F03%2F15%2F%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[摘要:生活不止眼前的苟且，还有日后的苟且。 1． 生存法则: 由开仓原则、短期原则、最大风险额度三项原则组成；保障资本的安全是投资最核心的法则！这是所有投资法则和投资策略的基石。身为职业投资管理者，最低程度为了今后10年的长期平稳发展和生存，减少风险、回避风险、控制风险是重中之重！2． 最大风险额度原则：任何一笔交易最大亏损都不得高于资产的5％,是生存法则的最后一层防护墙。无法控制损失的，风险/报酬比过高的交易就是不当交易，想稳定发展就必须避免――不当交易。亏不起，经不起任何意外的打击，出局了就什么都没了！ 3． 不做任何没设止损的交易。到了止损就习惯的严守纪律能立即了结头寸。交易没设止损就如同战场上没穿防弹衣，灾难临头将导致生活会突然中止，正确的习惯止损是成熟的首要，将挽救你的金融生涯. 4． 耐心，基本功之一，放弃该放弃的，把握能把握的；只坚持做符自己投资标准的投资，简以致胜，以简单应对复杂，把握中期时间框架,具有无限等待的耐心！舍弃不合要求的赌局，可以很轻松的对能力以外的机会说“不”。市场存在风险有限而获利空间巨大的战略机遇！没有胜率不出手。从长期看，良好的耐心终会获得丰厚的回报！ 耐心――趋势不变，持仓不变！坚定的拿住持仓！！]]></content>
      <categories>
        <category>经济学</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多态]]></title>
    <url>%2F2018%2F03%2F15%2Fhello%2F</url>
    <content type="text"><![CDATA[摘要:java编程思想多态作用：消除类型之间的耦合关系父类可以使用子类覆写自己的方法，在父类使用private，final时，子类不能继承。通过的是向上转型的方法。java除了static和final方法之外，都属于后期绑定。初始化顺序：1、基类构造类2、成员初始化方法3、类构造器方法private方法默认属final]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
</search>
